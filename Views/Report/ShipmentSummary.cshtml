<!-- Views/Report/ShipmentSummary.cshtml -->
@model L_Connect.Models.ViewModels.Reports.ShipmentSummaryReportViewModel
@{
    ViewData["Title"] = "Shipment Summary Report";
    Layout = "_AdminLayout";
}

<div class="container mt-4 report-container">
    <div class="card shadow-sm">
        <div class="card-header bg-primary text-white d-flex justify-content-between align-items-center">
            <h2 class="mb-0">Shipment Summary Report</h2>
            <button onclick="window.print()" class="btn btn-light">
                <i class="bi bi-printer"></i> Print Report
            </button>
        </div>
        <div class="card-body">
            <div class="row mb-4">
                <div class="col-md-6">
                    <h5>Report Period</h5>
                    <p>@Model.StartDate.ToString("MMMM d, yyyy") - @Model.EndDate.ToString("MMMM d, yyyy")</p>
                </div>
                <div class="col-md-6 text-md-end">
                    <h5>Generated on</h5>
                    <p>@DateTime.Now.ToString("MMMM d, yyyy HH:mm")</p>
                </div>
            </div>
            
            <!-- Key Metrics -->
            <div class="row g-4 mb-4">
                <div class="col-md-4">
                    <div class="card bg-light">
                        <div class="card-body text-center">
                            <h3 class="display-4">@Model.TotalShipments</h3>
                            <p class="lead">Total Shipments</p>
                        </div>
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="card bg-light">
                        <div class="card-body text-center">
                            <h3 class="display-4">@Model.TotalWeight.ToString("N2") kg</h3>
                            <p class="lead">Total Weight</p>
                        </div>
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="card bg-light">
                        <div class="card-body text-center">
                            <h3 class="display-4">$@Model.TotalRevenue.ToString("N2")</h3>
                            <p class="lead">Total Revenue</p>
                        </div>
                    </div>
                </div>
            </div>
            
            <!-- Status Breakdown -->
            <div class="row mb-4">
                <div class="col-12">
                    <div class="card">
                        <div class="card-header bg-light">
                            <h4 class="mb-0">Status Breakdown</h4>
                        </div>
                        <div class="card-body">
                            <div class="row text-center g-2">
                                <div class="col">
                                    <div class="p-3 border rounded bg-success text-white">
                                        <h5>Delivered</h5>
                                        <h3>@Model.DeliveredShipments</h3>
                                        <p>@(Model.TotalShipments > 0 ? (Model.DeliveredShipments * 100 / Model.TotalShipments).ToString("N1") : "0")%</p>
                                    </div>
                                </div>
                                <div class="col">
                                    <div class="p-3 border rounded bg-info text-white">
                                        <h5>In Transit</h5>
                                        <h3>@Model.InTransitShipments</h3>
                                        <p>@(Model.TotalShipments > 0 ? (Model.InTransitShipments * 100 / Model.TotalShipments).ToString("N1") : "0")%</p>
                                    </div>
                                </div>
                                <div class="col">
                                    <div class="p-3 border rounded bg-warning">
                                        <h5>Processing</h5>
                                        <h3>@Model.ProcessingShipments</h3>
                                        <p>@(Model.TotalShipments > 0 ? (Model.ProcessingShipments * 100 / Model.TotalShipments).ToString("N1") : "0")%</p>
                                    </div>
                                </div>
                                <div class="col">
                                    <div class="p-3 border rounded bg-secondary text-white">
                                        <h5>Pending</h5>
                                        <h3>@Model.PendingShipments</h3>
                                        <p>@(Model.TotalShipments > 0 ? (Model.PendingShipments * 100 / Model.TotalShipments).ToString("N1") : "0")%</p>
                                    </div>
                                </div>
                                <div class="col">
                                    <div class="p-3 border rounded bg-danger text-white">
                                        <h5>Cancelled</h5>
                                        <h3>@Model.CancelledShipments</h3>
                                        <p>@(Model.TotalShipments > 0 ? (Model.CancelledShipments * 100 / Model.TotalShipments).ToString("N1") : "0")%</p>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            
            <!-- Recent Shipments Table -->
            <div class="row">
                <div class="col-12">
                    <div class="card">
                        <div class="card-header bg-light">
                            <h4 class="mb-0">Recent Shipments</h4>
                        </div>
                        <div class="card-body p-0">
                            <div class="table-responsive">
                                <table class="table table-striped table-hover">
                                    <thead>
                                        <tr>
                                            <th>Tracking #</th>
                                            <th>Date</th>
                                            <th>Origin</th>
                                            <th>Destination</th>
                                            <th>Weight</th>
                                            <th>Cost</th>
                                            <th>Status</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var shipment in Model.RecentShipments)
                                        {
                                            <tr>
                                                <td>@shipment.TrackingNumber</td>
                                                <td>@shipment.CreatedAt.ToString("MMM d, yyyy")</td>
                                                <td title="@shipment.Origin">@(shipment.Origin.Length > 20 ? shipment.Origin.Substring(0, 20) + "..." : shipment.Origin)</td>
                                                <td title="@shipment.Destination">@(shipment.Destination.Length > 20 ? shipment.Destination.Substring(0, 20) + "..." : shipment.Destination)</td>
                                                <td>@shipment.Weight.ToString("N2") kg</td>
                                                <td>$@shipment.Cost.ToString("N2")</td>
                                                <td>
                                                    <span class="badge bg-@GetStatusBadgeClass(shipment.Status)">@shipment.Status</span>
                                                </td>
                                            </tr>
                                        }
                                        @if (!Model.RecentShipments.Any())
                                        {
                                            <tr>
                                                <td colspan="7" class="text-center py-3">No shipments found in the selected date range</td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@functions {
    string GetStatusBadgeClass(string status)
    {
        return status?.ToLower() switch
        {
            "delivered" => "success",
            "in transit" => "info",
            "processing" => "warning",
            "pending" => "secondary",
            "cancelled" => "danger",
            _ => "secondary"
        };
    }
}

<style>
    /* Print styles */
    @@media print {
        .navbar, .btn-light, footer {
            display: none !important;
        }
        .card {
            border: none !important;
            box-shadow: none !important;
        }
        .card-header {
            background-color: #f8f9fa !important;
            color: #000 !important;
        }
        .container {
            width: 100% !important;
            max-width: 100% !important;
        }
        body {
            -webkit-print-color-adjust: exact !important;
            print-color-adjust: exact !important;
        }
    }
</style>