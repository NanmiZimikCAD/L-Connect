// <auto-generated />
using System;
using L_Connect.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace L_Connect.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250226210542_SeedShipmentData")]
    partial class SeedShipmentData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("L_Connect.Models.Domain.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("role_id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("RoleId"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("description");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("role_name");

                    b.HasKey("RoleId");

                    b.ToTable("ROLES");

                    b.HasData(
                        new
                        {
                            RoleId = 1,
                            CreatedAt = new DateTime(2025, 2, 26, 21, 5, 41, 992, DateTimeKind.Utc).AddTicks(8216),
                            Description = "Administrator",
                            RoleName = "ADMIN"
                        },
                        new
                        {
                            RoleId = 2,
                            CreatedAt = new DateTime(2025, 2, 26, 21, 5, 41, 992, DateTimeKind.Utc).AddTicks(8285),
                            Description = "Client User",
                            RoleName = "CLIENT"
                        });
                });

            modelBuilder.Entity("L_Connect.Models.Domain.Shipment", b =>
                {
                    b.Property<int>("ShipmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("ShipmentId"));

                    b.Property<int?>("AppliedPriceId")
                        .HasColumnType("int");

                    b.Property<int?>("ClientId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("CreatedByAdminId")
                        .HasColumnType("int");

                    b.Property<string>("CurrentLocation")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("CurrentStatus")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("DestinationAddress")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime?>("EstimatedDeliveryDate")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal>("FinalCost")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<string>("OriginAddress")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("TrackingNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<decimal>("Weight")
                        .HasColumnType("decimal(10, 2)");

                    b.HasKey("ShipmentId");

                    b.HasIndex("ClientId");

                    b.HasIndex("CreatedByAdminId");

                    b.ToTable("Shipments");

                    b.HasData(
                        new
                        {
                            ShipmentId = 1,
                            CreatedAt = new DateTime(2025, 2, 23, 21, 5, 42, 77, DateTimeKind.Utc).AddTicks(3212),
                            CurrentLocation = "Transit Hub, Midway City",
                            CurrentStatus = "In Transit",
                            DestinationAddress = "456 Receiver Ave, Destination City, DC 67890",
                            EstimatedDeliveryDate = new DateTime(2025, 2, 28, 21, 5, 42, 77, DateTimeKind.Utc).AddTicks(3222),
                            FinalCost = 0m,
                            OriginAddress = "123 Sender St, Origin City, OC 12345",
                            TrackingNumber = "LC-2402-123456",
                            Weight = 0m
                        },
                        new
                        {
                            ShipmentId = 2,
                            CreatedAt = new DateTime(2025, 2, 21, 21, 5, 42, 77, DateTimeKind.Utc).AddTicks(3231),
                            CurrentLocation = "Destination Town",
                            CurrentStatus = "Delivered",
                            DestinationAddress = "101 Receiver Dr, Destination Town, DT 78901",
                            EstimatedDeliveryDate = new DateTime(2025, 2, 25, 21, 5, 42, 77, DateTimeKind.Utc).AddTicks(3232),
                            FinalCost = 0m,
                            OriginAddress = "789 Sender Blvd, Origin Town, OT 23456",
                            TrackingNumber = "LC-2402-234567",
                            Weight = 0m
                        },
                        new
                        {
                            ShipmentId = 3,
                            ClientId = 2,
                            CreatedAt = new DateTime(2025, 2, 25, 21, 5, 42, 77, DateTimeKind.Utc).AddTicks(3235),
                            CurrentLocation = "Origin Warehouse",
                            CurrentStatus = "Processing",
                            DestinationAddress = "777 Client St, Client City, CC 89012",
                            EstimatedDeliveryDate = new DateTime(2025, 3, 2, 21, 5, 42, 77, DateTimeKind.Utc).AddTicks(3235),
                            FinalCost = 0m,
                            OriginAddress = "555 Business Rd, Corporate City, CC 34567",
                            TrackingNumber = "LC-2402-345678",
                            Weight = 0m
                        });
                });

            modelBuilder.Entity("L_Connect.Models.Domain.ShipmentStatus", b =>
                {
                    b.Property<int>("StatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("StatusId"));

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<int>("ShipmentId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("UpdatedByAdminId")
                        .HasColumnType("int");

                    b.HasKey("StatusId");

                    b.HasIndex("ShipmentId");

                    b.HasIndex("UpdatedByAdminId");

                    b.ToTable("ShipmentStatuses");

                    b.HasData(
                        new
                        {
                            StatusId = 1,
                            Location = "Online System",
                            Notes = "Shipment order received and entered into system",
                            ShipmentId = 1,
                            Status = "Order Received",
                            UpdatedAt = new DateTime(2025, 2, 23, 21, 5, 42, 77, DateTimeKind.Utc).AddTicks(3271)
                        },
                        new
                        {
                            StatusId = 2,
                            Location = "Origin Warehouse",
                            Notes = "Package received at origin facility",
                            ShipmentId = 1,
                            Status = "Processing",
                            UpdatedAt = new DateTime(2025, 2, 24, 9, 5, 42, 77, DateTimeKind.Utc).AddTicks(3275)
                        },
                        new
                        {
                            StatusId = 3,
                            Location = "Transit Hub, Midway City",
                            Notes = "Package in transit to destination",
                            ShipmentId = 1,
                            Status = "In Transit",
                            UpdatedAt = new DateTime(2025, 2, 25, 21, 5, 42, 77, DateTimeKind.Utc).AddTicks(3277)
                        },
                        new
                        {
                            StatusId = 4,
                            Location = "Online System",
                            Notes = "Shipment order received",
                            ShipmentId = 2,
                            Status = "Order Received",
                            UpdatedAt = new DateTime(2025, 2, 21, 21, 5, 42, 77, DateTimeKind.Utc).AddTicks(3279)
                        },
                        new
                        {
                            StatusId = 5,
                            Location = "Origin Warehouse",
                            Notes = "Package being processed",
                            ShipmentId = 2,
                            Status = "Processing",
                            UpdatedAt = new DateTime(2025, 2, 22, 9, 5, 42, 77, DateTimeKind.Utc).AddTicks(3281)
                        },
                        new
                        {
                            StatusId = 6,
                            Location = "Transit Hub",
                            Notes = "Package in transit",
                            ShipmentId = 2,
                            Status = "In Transit",
                            UpdatedAt = new DateTime(2025, 2, 23, 21, 5, 42, 77, DateTimeKind.Utc).AddTicks(3283)
                        },
                        new
                        {
                            StatusId = 7,
                            Location = "Local Delivery Center",
                            Notes = "Package out for delivery",
                            ShipmentId = 2,
                            Status = "Out for Delivery",
                            UpdatedAt = new DateTime(2025, 2, 25, 9, 5, 42, 77, DateTimeKind.Utc).AddTicks(3285)
                        },
                        new
                        {
                            StatusId = 8,
                            Location = "Destination Town",
                            Notes = "Package delivered successfully",
                            ShipmentId = 2,
                            Status = "Delivered",
                            UpdatedAt = new DateTime(2025, 2, 25, 21, 5, 42, 77, DateTimeKind.Utc).AddTicks(3287)
                        },
                        new
                        {
                            StatusId = 9,
                            Location = "Online System",
                            Notes = "Order received from client",
                            ShipmentId = 3,
                            Status = "Order Received",
                            UpdatedAt = new DateTime(2025, 2, 25, 21, 5, 42, 77, DateTimeKind.Utc).AddTicks(3288)
                        },
                        new
                        {
                            StatusId = 10,
                            Location = "Origin Warehouse",
                            Notes = "Package being prepared for shipping",
                            ShipmentId = 3,
                            Status = "Processing",
                            UpdatedAt = new DateTime(2025, 2, 26, 15, 5, 42, 77, DateTimeKind.Utc).AddTicks(3290)
                        });
                });

            modelBuilder.Entity("L_Connect.Models.Domain.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("ContactNumber")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("contact_number");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("email");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("full_name");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("password_hash");

                    b.Property<int>("RoleId")
                        .HasColumnType("int")
                        .HasColumnName("role_id");

                    b.HasKey("UserId");

                    b.HasIndex("RoleId");

                    b.ToTable("USERS");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            ContactNumber = "1234567890",
                            CreatedAt = new DateTime(2025, 2, 26, 21, 5, 41, 992, DateTimeKind.Utc).AddTicks(8594),
                            Email = "admin@test.com",
                            FullName = "Test Admin",
                            PasswordHash = "AQAAAAIAAYagAAAAEMtBDC/lTQ03NlRRzcI422Q8MccJrAFkaIv7cdkN/+hnx5bPa3xe08DVG+KjXI8SbQ==",
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 2,
                            ContactNumber = "0987654321",
                            CreatedAt = new DateTime(2025, 2, 26, 21, 5, 41, 992, DateTimeKind.Utc).AddTicks(8596),
                            Email = "client@test.com",
                            FullName = "Test Client",
                            PasswordHash = "AQAAAAIAAYagAAAAELa9uBxn8IA28oIRnr5E83B0uNP3kWM5VOFzgy1irrtuiX5/LTtooFJJvyzKNjUfQg==",
                            RoleId = 2
                        });
                });

            modelBuilder.Entity("L_Connect.Models.Domain.Shipment", b =>
                {
                    b.HasOne("L_Connect.Models.Domain.User", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId");

                    b.HasOne("L_Connect.Models.Domain.User", "Admin")
                        .WithMany()
                        .HasForeignKey("CreatedByAdminId");

                    b.Navigation("Admin");

                    b.Navigation("Client");
                });

            modelBuilder.Entity("L_Connect.Models.Domain.ShipmentStatus", b =>
                {
                    b.HasOne("L_Connect.Models.Domain.Shipment", "Shipment")
                        .WithMany()
                        .HasForeignKey("ShipmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("L_Connect.Models.Domain.User", "Admin")
                        .WithMany()
                        .HasForeignKey("UpdatedByAdminId");

                    b.Navigation("Admin");

                    b.Navigation("Shipment");
                });

            modelBuilder.Entity("L_Connect.Models.Domain.User", b =>
                {
                    b.HasOne("L_Connect.Models.Domain.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("L_Connect.Models.Domain.Role", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
